# Тема: Цикл while. Операторы break, continue, else.

# Упражнение 1: Поиск числа
#
# Напишите программу, которая запрашивает у пользователя числа, пока он не введет число совпадающее
# с переменной num (num = любое число от 0 до 100).  Если введенное число меньше num, программа должна
# выводить сообщение "Слишком маленькое число" и продолжать запрашивать числа. Если число больше num,
# программа должна вывести сообщение "Вы ввели большее число" и продолжать запрашивать числа.
# Если пользователь угадал, то программа должна вывести "Вы угадали число" и завершиться.

#num = 42
#while True:
#    user_input = int(input("Введите число: "))

#    if user_input < num:
#        print("Слишком маленькое число")
#    elif user_input > num:
#        print("Вы ввели большее число")
#    else:
#        print("Вы угадали число!")
#        break

# Упражнение 2: Проверка пароля
#
# Напишите программу, которая будет запрашивать у пользователя пароль до тех пор, пока не будет введен
# правильный пароль "python123", либо пока не закончатся попытки. Если введенный пароль содержит пробелы,
# программа должна выводить сообщение "Пароль не должен содержать пробелов" и продолжать запрашивать пароль.
# Если введен правильный пароль, программа должна выводить сообщение "Доступ разрешен" и завершаться.
# Если после трех неправильных попыток пароль не введен правильно, программа должна выводить сообщение
# "Превышено количество попыток" и завершаться.

#correct_password = "python123"
#attempts = 3  # Количество попыток

#while attempts > 0:
#    password = input("Введите пароль: ")

#    if " " in password:
#        print("Пароль не должен содержать пробелов")
#    elif password == correct_password:
#        print("Доступ разрешен")
#        break
#    else:
#        attempts -= 1
#        print(f"Неверный пароль. Осталось попыток: {attempts}")

#if attempts == 0:
#    print("Превышено количество попыток")

# Упражнение 3: Работа со списком покупок
#
# Напишите программу, которая будет запрашивать у пользователя элементы для списка покупок до тех пор,
# пока не будет введено слово "стоп", либо пока количество покупок не станет больше 6. Если введенное
# слово уже есть в списке, программа должна выводить сообщение "Этот элемент уже в списке" и продолжать
# запрашивать новые элементы. Если введено слово "стоп", программа должна выводить сообщение
# "Формирование списка завершено" и завершаться. Если количество покупок ставится больше 6,
# то программа должна вывести: “Превышен лимит покупок.” и завершиться.
# Перед завершением программа должна выводить итоговый список покупок и общее количество элементов в нем.

#shopping_list = []  # Создаем пустой список покупок
#max_items = 6  # Максимальное количество покупок

#while len(shopping_list) < max_items:
#    item = input("Введите покупку (или 'стоп' для завершения): ").strip().lower()

#    if item == "стоп":
#        print("Формирование списка завершено.")
#        break
#    elif item in shopping_list:
#        print("Этот элемент уже в списке")
#    else:
#        shopping_list.append(item)

#if len(shopping_list) >= max_items:
#    print("Превышен лимит покупок.")
# Выводим итоговый список покупок и его размер
#print("Ваш список покупок:", shopping_list)
#print("Общее количество покупок:", len(shopping_list))

# Тема: Цикл for

# Упражнение 1: Подсчет гласных в строке
#
# Напишите программу, которая принимает строку от пользователя и подсчитывать количество гласных букв (a, e, i, o, u)
# в этой строке.Используйте цикл for и условие if.

#text = input("Введите строку: ").lower()  # Приводим к нижнему регистру для удобства

# Определяем гласные буквы
#vowels = "aeiou"

# Счетчик гласных
#vowel_count = 0

# Перебираем каждый символ в строке
#for char in text:
#    if char in vowels:
#        vowel_count += 1  # Увеличиваем счетчик, если буква гласная

# Выводим результат
#print(f"Количество гласных букв: {vowel_count}")

# Упражнение 2: Генерация и вывод последовательности чисел
#
# Напишите программу, которая генерит и выводит последовательность чисел от 1 до 20,
# но выводит "Fizz" вместо чисел, кратных 3, "Buzz" вместо чисел, кратных 5, и "FizzBuzz"
# вместо чисел, кратных как 3, так и 5. Используйте цикл for и функцию range.

#for num in range(1, 21):  # Перебираем числа от 1 до 20
#    if num % 3 == 0 and num % 5 == 0:
#        print("FizzBuzz")  # Если число делится и на 3, и на 5
#    elif num % 3 == 0:
#        print("Fizz")  # Если число делится только на 3
#    elif num % 5 == 0:
#        print("Buzz")  # Если число делится только на 5
#    else:
#        print(num)

# Проект 1: Управление библиотекой
#
# Описание:
# Разработайте программу для управления библиотекой. Программа должна позволять добавлять книги в библиотеку,
# удалять книги, искать книги по автору и выводить список всех книг с их авторами и статусами (в наличии или выдана).
#
# Требования: Реализуйте работу всех пунктов меню.
#
# library = [["Война и мир", "Толстой", "в наличии"],
#            ["Преступление и наказание", "Достоевский", "выдана"],
#            ["Мастер и Маргарита", "Булгаков", "в наличии"]]
#
# while True:
#     print("\nМеню")
#     print("1. Показать список всех книг")
#     print("2. Добавить книгу")
#     print("3. Удалить книгу")
#     print("4. Поменять статус книги")
#     print("5. Показать книги определенного автора")
#     print("6. Показать книги с определенным статусом")
#     choice = input("Выберите действие, введя его номер: ")
#
#     # Продолжите программу ниже.


# Проект 2: Анализ посещаемости на сайте
#
# Разработайте программу для анализа посещаемости на сайте. Программа должна позволять вводить количество посещений
# за каждый день недели, определять дни с наибольшей и наименьшей посещаемостью, рассчитывать среднюю посещаемость
# за неделю и выводить дни с посещаемостью выше среднего.
#
# days = ["Понедельник", "Вторник", "Среда", "Четверг", "Пятница", "Суббота", "Воскресенье"]
# visits = []

days = ["Понедельник", "Вторник", "Среда", "Четверг", "Пятница", "Суббота", "Воскресенье"]
visits = []

# Ввод посещаемости
for day in days:
    count = int(input(f"Введите количество посещений за {day}: "))
    visits.append(count)

# Определяем дни с макс. и мин. посещаемостью
max_visits = max(visits)
min_visits = min(visits)
max_days = [days[i] for i, v in enumerate(visits) if v == max_visits]
min_days = [days[i] for i, v in enumerate(visits) if v == min_visits]

# Средняя посещаемость
avg_visits = sum(visits) / len(visits)

# Дни с посещаемостью выше среднего
above_avg_days = [days[i] for i, v in enumerate(visits) if v > avg_visits]

# Вывод результатов
print("\n Анализ посещаемости")
print(f"Максимальная посещаемость ({max_visits} посещений): {', '.join(max_days)}")
print(f"Минимальная посещаемость ({min_visits} посещений): {', '.join(min_days)}")
print(f"Средняя посещаемость за неделю: {avg_visits:.2f}")
print(f"Дни с посещаемостью выше среднего: {', '.join(above_avg_days) if above_avg_days else 'Нет таких дней'}")
