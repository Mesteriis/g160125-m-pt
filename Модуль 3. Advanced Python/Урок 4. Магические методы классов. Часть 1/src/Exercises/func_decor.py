# Задача: Создание класса-декоратора для времени выполнения функции
# Описание:
#
# Создайте класс-декоратор TimeLogger, который будет логировать время выполнения оборачиваемой функции.
# Класс должен использовать метод __call__ для измерения времени выполнения функции и вывода этой информации на экран.
#
# Требования:
#
# Класс TimeLogger должен принимать функцию в своем конструкторе.
# Метод __call__ должен измерять время выполнения функции и выводить эту информацию на экран.
# Напишите тестовый код, который демонстрирует использование этого декоратора.

# your code here

def main():
    # your code here
    pass


if __name__ == '__main__':
    main()



import time

class TimeLogger:
    def __init__(self, func):
        self.func = func

    def __call__(self, *args, **kwargs):
        start_time = time.time()  # Засекаем время начала выполнения функции
        result = self.func(*args, **kwargs)  # Выполняем функцию
        end_time = time.time()  # Засекаем время окончания выполнения функции
        execution_time = end_time - start_time  # Вычисляем время выполнения
        print(f"Функция '{self.func.__name__}' выполнена за {execution_time:.6f} секунд.")
        return result
