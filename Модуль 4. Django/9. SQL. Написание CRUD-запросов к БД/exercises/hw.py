# Напишите запросы на языке SQL

# 1. Создание новой категории
# Например:
# Создайте новую категорию с именем "Путешествия".

# 2. Создание новой статьи
# Например
# Создайте новую статью с
#     заголовком "Путешествие в Исландию",
#     содержанием "Исландия — удивительная страна с вулканами и гейзерами.",
#     датой публикации "2023-10-15T12:00:00Z",
#     количеством просмотров 100,
#     категорией "Путешествия" и
#     активным статусом.

# 3. Выборка всех статей
# Например:
# Выберите все статьи из категории "Технологии".

# 4. Выборка всех активных статей

# 5. Обновление заголовка статьи
# Например:
# Обновите заголовок статьи с id 1 на "Новый заголовок".

# 6: Увеличение количества просмотров статьи
# Например:
# Увеличьте количество просмотров статьи с id 2 на 50.

# 7. Удаление статьи
# Например:
# Удалите статью с id 73

# 8. Создание нового тега
# Например:
# Создайте новый тег с именем "Путешествия".

# 9. Добавление тега к статье
# Например:
# Добавьте тег "Путешествия" к статье с id 21.

# 10. Выборка всех статей с определенным тегом
# Например:
# Выберите все статьи, которые имеют тег "Путешествия".

# 11. Удаление тега из статьи
# Например:
# Удалите тег "Путешествия" из статьи с id 21.


# Напишите запросы на языке Django ORM

# 12. Создание новой категории
# Например:
# Создайте новую категорию с именем "Путешествия".

# 13. Создание новой статьи
# Например
# Создайте новую статью с
#     заголовком "Путешествие в Исландию",
#     содержанием "Исландия — удивительная страна с вулканами и гейзерами.",
#     датой публикации "2023-10-15T12:00:00Z",
#     количеством просмотров 100,
#     категорией "Путешествия" и
#     активным статусом.

# 14. Выборка всех статей
# Например:
# Выберите все статьи из категории "Технологии".

# 15. Выборка всех активных статей

# 16. Обновление заголовка статьи
# Например:
# Обновите заголовок статьи с id 1 на "Новый заголовок".

# 17: Увеличение количества просмотров статьи
# Например:
# Увеличьте количество просмотров статьи с id 2 на 50.

# 18. Удаление статьи
# Например:
# Удалите статью с id 73

# 19. Создание нового тега
# Например:
# Создайте новый тег с именем "Путешествия".

# 20. Добавление тега к статье
# Например:
# Добавьте тег "Путешествия" к статье с id 21.

# 21. Выборка всех статей с определенным тегом
# Например:
# Выберите все статьи, которые имеют тег "Путешествия".

# 22. Удаление тега из статьи
# Например:
# Удалите тег "Путешествия" из статьи с id 21.

def handle(self, *args, **kwargs):
    pass
    # category = Category.objects.create(name="Путешествия2")
    # print(category)

    # new_article = Article.objects.create(title="Путешествие в Исландию", content="Исландия — удивительная страна с вулканами и гейзерами.",
    #                                      publication_date="2023-10-15T12:00:00Z", category_id=9, views=100, is_active=True)
    # print(new_article)

    # all_tech_articles = Article.objects.filter(category_id=1)
    # print(all_tech_articles)

    # all_active_articles = Article.objects.filter(is_active=True)
    # print(all_active_articles)

    # update_title = Article.objects.get(id=1)
    # Article.title = "New title"
    # update_title.save()
    # print(Article.title)

    # more_views = Article.objects.filter(id=2).update(views=55)
    # print(more_views)

    # delete_article = Article.objects.get(id=10)
    # delete_article.delete()
    # print(delete_article)

    # new_tag = Tag.objects.create(name="Путешествия2")
    # print(new_tag)

    # article = Article.objects.get(id=21)
    # tag = Tag.objects.get(id='Путешествия')
    # article.tags.add(tag)
    # print(f"{tag.name} added to {article.title}")

    # travel_tag = Tag.objects.get(name='Путешествия')
    # articles = Article.objects.filter(tags=travel_tag)
    # print(articles)

    # tag = Tag.objects.get(name='Путешествия')
    # article = Article.objects.get(id=21)
    # article.tags.remove(tag)
    # print(f"Tag '{tag.name}' was removed from article '{article.title}'")